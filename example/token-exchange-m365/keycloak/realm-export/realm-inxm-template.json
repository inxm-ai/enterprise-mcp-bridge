{
  "realm": "inxm",
  "enabled": true,
  "registrationAllowed": true,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "bruteForceProtected": false,
  "roles": {
    "realm": [
      {
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false
      },
      {
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false
      },
      {
        "name": "default-roles-{{ .Values.realm.name | lower }}",
        "description": "Default roles for {{ .Values.realm.name }} realm",
        "composites": {
          "realm": ["offline_access", "uma_authorization"]
        }
      }
    ]
  },
  "defaultRole": {
    "name": "default-roles-{{ .Values.realm.name | lower }}"
  },
  "identityProviders": [
    {
      "alias": "ms365",
      "displayName": "Microsoft Entra ID",
      "providerId": "oidc",
      "enabled": true,
      "storeToken": true,
      "addReadTokenRoleOnCreate": true,
      "trustEmail": true,
      "firstBrokerLoginFlowAlias": "first broker login",
      "linkOnly": false,
      "config": {
        "clientId": "${AZURE_CLIENT_ID}",
        "clientSecret": "${AZURE_CLIENT_SECRET}",
        "authorizationUrl": "https://login.microsoftonline.com/${AZURE_TENANT_ID}/oauth2/v2.0/authorize",
        "tokenUrl": "https://login.microsoftonline.com/${AZURE_TENANT_ID}/oauth2/v2.0/token",
        "jwksUrl": "https://login.microsoftonline.com/${AZURE_TENANT_ID}/discovery/v2.0/keys",
        "issuer": "https://login.microsoftonline.com/${AZURE_TENANT_ID}/v2.0",
        "useJwksUrl": "true",
        "defaultScope": "openid email profile offline_access https://graph.microsoft.com/.default"
      }
    }
  ],
  "clients": [
    {
      "clientId": "frontend-client",
      "enabled": true,
      "protocol": "openid-connect",
      "redirectUris": ["https://inxm.local/oauth2/callback"],
      "publicClient": false,
      "secret": "this-is-not-a-secret",
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "fullScopeAllowed": true,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "basic",
        "openid",
        "profile",
        "email",
        "offline_access"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ],
      "protocolMappers": [
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "preferred_username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "frontend-client",
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "name": "email-verified-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "claim.name": "email_verified",
            "claim.value": "true",
            "jsonType.label": "boolean",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "userinfo.token.claim": "false"
          }
        }
      ],
      "attributes": {
        "use.refresh.tokens": "true",
        "client_credentials.use_refresh_token": "true",
        "oidc.ciba.grant.enabled": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "client.secret.creation.time": "1640995200",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false",
        "store.tokens": "true",
        "store.token.in.user.session": "true"
      }
    }
  ]
}
