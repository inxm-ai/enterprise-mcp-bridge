{
  "messages": [
    {
      "role": "user",
      "content": "hello, how are you?"
    }
  ],
  "tools": [
    {
      "type": "function",
      "function": {
        "name": "list-mail-folders",
        "description": "Get the mail folder collection directly under the root folder of the signed-in user. The returned collection includes any mail search folders directly under the root. By default, this operation does not return hidden folders. Use a query parameter includeHiddenFolders to include them in the response. This operation does not return all mail folders in a mailbox, only the child folders of the root folder. To return all mail folders in a mailbox, each child folder must be traversed separately.",
        "parameters": {
          "type": "object",
          "properties": {
            "includeHiddenFolders": {
              "type": "string",
              "description": "Include Hidden Folders"
            },
            "top": {
              "type": "integer",
              "minimum": 0,
              "description": "Show only the first n items"
            },
            "skip": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip the first n items"
            },
            "search": {
              "type": "string",
              "description": "Search items by search phrases"
            },
            "filter": {
              "type": "string",
              "description": "Filter items by property values"
            },
            "count": {
              "type": "boolean",
              "description": "Include count of items"
            },
            "orderby": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Order items by property values"
            },
            "select": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Select properties to be returned"
            },
            "expand": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Expand related entities"
            },
            "fetchAllPages": {
              "type": "boolean",
              "description": "Automatically fetch all pages of results"
            }
          },
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "list-mail-folder-messages",
        "description": "Get all the messages in the specified user&#x27;s mailbox, or those messages in a specified folder in the mailbox.",
        "parameters": {
          "type": "object",
          "properties": {
            "top": {
              "type": "integer",
              "minimum": 0,
              "description": "Show only the first n items"
            },
            "skip": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip the first n items"
            },
            "search": {
              "type": "string",
              "description": "Search items by search phrases"
            },
            "filter": {
              "type": "string",
              "description": "Filter items by property values"
            },
            "count": {
              "type": "boolean",
              "description": "Include count of items"
            },
            "orderby": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Order items by property values"
            },
            "select": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Select properties to be returned"
            },
            "expand": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Expand related entities"
            },
            "mailFolderId": {
              "type": "string",
              "description": "Path parameter: mailFolderId"
            },
            "fetchAllPages": {
              "type": "boolean",
              "description": "Automatically fetch all pages of results"
            }
          },
          "required": [
            "mailFolderId"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "list-mail-messages",
        "description": "Get an open extension (openTypeExtension object) identified by name or fully qualified name. The table in the Permissions section lists the resources that support open extensions. The following table lists the three scenarios where you can get an open extension from a supported resource instance.",
        "parameters": {
          "type": "object",
          "properties": {
            "includeHiddenMessages": {
              "type": "string",
              "description": "Include Hidden Messages"
            },
            "top": {
              "type": "integer",
              "minimum": 0,
              "description": "Show only the first n items"
            },
            "skip": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip the first n items"
            },
            "search": {
              "type": "string",
              "description": "Search items by search phrases"
            },
            "filter": {
              "type": "string",
              "description": "Filter items by property values"
            },
            "count": {
              "type": "boolean",
              "description": "Include count of items"
            },
            "orderby": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Order items by property values"
            },
            "select": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Select properties to be returned"
            },
            "expand": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Expand related entities"
            },
            "fetchAllPages": {
              "type": "boolean",
              "description": "Automatically fetch all pages of results"
            }
          },
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "create-draft-email",
        "description": "Create a draft of a new message in either JSON or MIME format. When using JSON format, you can:\n- Include an attachment to the message.\n- Update the draft later to add content to the body or change other message properties. When using MIME format:\n- Provide the applicable Internet message headers and the MIME content, all encoded in base64 format in the request body.\n- /* Add any attachments and S/MIME properties to the MIME content. By default, this operation saves the draft in the Drafts folder. Send the draft message in a subsequent operation. Alternatively, send a new message in a single operation, or create a draft to forward, reply and reply-all to an existing message.",
        "parameters": {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "body": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The content of the item."
                    },
                    "contentType": {
                      "type": "string",
                      "enum": [
                        "text",
                        "html"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "subject": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The subject of the message."
                },
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique identifier for an entity. Read-only."
                      },
                      "contentType": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "The MIME type."
                      },
                      "isInline": {
                        "type": "boolean",
                        "description": "true if the attachment is an inline attachment; otherwise, false."
                      },
                      "lastModifiedDateTime": {
                        "anyOf": [
                          {
                            "type": "string",
                            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                            "format": "date-time",
                            "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                      },
                      "name": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "The attachment's file name."
                      },
                      "size": {
                        "type": "number",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "description": "The length of the attachment in bytes."
                      }
                    },
                    "additionalProperties": false
                  },
                  "description": "The fileAttachment and itemAttachment attachments for the message."
                },
                "bccRecipients": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "emailAddress": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The email address of the person or entity."
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The display name of the person or entity."
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "description": "The Bcc: recipients for the message."
                },
                "bodyPreview": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The first 255 characters of the message body. It is in text format."
                },
                "ccRecipients": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "emailAddress": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The email address of the person or entity."
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The display name of the person or entity."
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "description": "The Cc: recipients for the message."
                },
                "conversationId": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The ID of the conversation the email belongs to."
                },
                "conversationIndex": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Indicates the position of the message within the conversation."
                },
                "flag": {
                  "type": "object",
                  "properties": {
                    "completedDateTime": {
                      "type": "object",
                      "properties": {
                        "dateTime": {
                          "type": "string",
                          "description": "A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000)."
                        },
                        "timeZone": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values."
                        }
                      },
                      "additionalProperties": false
                    },
                    "dueDateTime": {
                      "type": "object",
                      "properties": {
                        "dateTime": {
                          "type": "string",
                          "description": "A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000)."
                        },
                        "timeZone": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values."
                        }
                      },
                      "additionalProperties": false
                    },
                    "flagStatus": {
                      "type": "string",
                      "enum": [
                        "notFlagged",
                        "complete",
                        "flagged"
                      ]
                    },
                    "startDateTime": {}
                  },
                  "additionalProperties": false
                },
                "from": {},
                "hasAttachments": {
                  "type": [
                    "boolean",
                    "null"
                  ],
                  "description": "Indicates whether the message has attachments. This property doesn't include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src='cid:image001.jpg@01D26CD8.6C05F070'>."
                },
                "importance": {
                  "type": "string",
                  "enum": [
                    "low",
                    "normal",
                    "high"
                  ]
                },
                "inferenceClassification": {
                  "type": "string",
                  "enum": [
                    "focused",
                    "other"
                  ]
                },
                "internetMessageHeaders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "Represents the key in a key-value pair."
                      },
                      "value": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "The value in a key-value pair."
                      }
                    },
                    "additionalProperties": false
                  },
                  "description": "A collection of message headers defined by RFC5322. The set includes message headers indicating the network path taken by a message from the sender to the recipient. It can also contain custom message headers that hold app data for the message.  Returned only on applying a $select query option. Read-only."
                },
                "internetMessageId": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The message ID in the format specified by RFC2822."
                },
                "isDeliveryReceiptRequested": {
                  "type": [
                    "boolean",
                    "null"
                  ],
                  "description": "Indicates whether a read receipt is requested for the message."
                },
                "isDraft": {
                  "type": [
                    "boolean",
                    "null"
                  ],
                  "description": "Indicates whether the message is a draft. A message is a draft if it hasn't been sent yet."
                },
                "isRead": {
                  "type": [
                    "boolean",
                    "null"
                  ],
                  "description": "Indicates whether the message has been read."
                },
                "isReadReceiptRequested": {
                  "type": [
                    "boolean",
                    "null"
                  ],
                  "description": "Indicates whether a read receipt is requested for the message."
                },
                "parentFolderId": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The unique identifier for the message's parent mailFolder."
                },
                "receivedDateTime": {
                  "anyOf": [
                    {
                      "type": "string",
                      "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                      "format": "date-time",
                      "description": "The date and time the message was received.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The date and time the message was received.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                },
                "replyTo": {
                  "type": "array",
                  "items": {},
                  "description": "The email addresses to use when replying."
                },
                "sender": {},
                "sentDateTime": {
                  "anyOf": [
                    {
                      "type": "string",
                      "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                      "format": "date-time",
                      "description": "The date and time the message was sent.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The date and time the message was sent.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                },
                "toRecipients": {
                  "type": "array",
                  "items": {},
                  "description": "The To: recipients for the message."
                }
              },
              "additionalProperties": true
            }
          },
          "required": [
            "body"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "get-mail-message",
        "description": "Get the properties and relationships of the eventMessage object. Apply the $expand parameter on the event navigation property to get the associated event in an attendee&#x27;s calendar. Currently, this operation returns event message bodies in only HTML format.",
        "parameters": {
          "type": "object",
          "properties": {
            "select": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Select properties to be returned"
            },
            "expand": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Expand related entities"
            },
            "messageId": {
              "type": "string",
              "description": "Path parameter: messageId"
            },
            "fetchAllPages": {
              "type": "boolean",
              "description": "Automatically fetch all pages of results"
            }
          },
          "required": [
            "messageId"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "delete-mail-message",
        "description": "Delete eventMessage.",
        "parameters": {
          "type": "object",
          "properties": {
            "If-Match": {
              "type": "string",
              "description": "ETag"
            },
            "messageId": {
              "type": "string",
              "description": "Path parameter: messageId"
            }
          },
          "required": [
            "messageId"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "list-mail-attachments",
        "description": "Retrieve a list of attachment objects attached to a message.",
        "parameters": {
          "type": "object",
          "properties": {
            "top": {
              "type": "integer",
              "minimum": 0,
              "description": "Show only the first n items"
            },
            "skip": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip the first n items"
            },
            "search": {
              "type": "string",
              "description": "Search items by search phrases"
            },
            "filter": {
              "type": "string",
              "description": "Filter items by property values"
            },
            "count": {
              "type": "boolean",
              "description": "Include count of items"
            },
            "orderby": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Order items by property values"
            },
            "select": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Select properties to be returned"
            },
            "expand": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Expand related entities"
            },
            "messageId": {
              "type": "string",
              "description": "Path parameter: messageId"
            },
            "fetchAllPages": {
              "type": "boolean",
              "description": "Automatically fetch all pages of results"
            }
          },
          "required": [
            "messageId"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "add-mail-attachment",
        "description": "Use this API to add an attachment to a message. An attachment can be one of the following types: All these types of attachment resources are derived from the attachment\nresource. You can add an attachment to an existing message by posting to its attachments collection, or you can\nadd an attachment to a message that is being created and sent on the fly. This operation limits the size of the attachment you can add to under 3 MB.",
        "parameters": {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier for an entity. Read-only."
                },
                "contentType": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The MIME type."
                },
                "isInline": {
                  "type": "boolean",
                  "description": "true if the attachment is an inline attachment; otherwise, false."
                },
                "lastModifiedDateTime": {
                  "anyOf": [
                    {
                      "type": "string",
                      "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                      "format": "date-time",
                      "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                },
                "name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The attachment's file name."
                },
                "size": {
                  "type": "number",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "description": "The length of the attachment in bytes."
                }
              },
              "additionalProperties": false
            },
            "messageId": {
              "type": "string",
              "description": "Path parameter: messageId"
            }
          },
          "required": [
            "body",
            "messageId"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "get-mail-attachment",
        "description": "Read the properties, relationships, or raw contents of an attachment that is attached to a user event, message, or group post. An attachment can be one of the following types: All these types of attachments are derived from the attachment resource.",
        "parameters": {
          "type": "object",
          "properties": {
            "select": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Select properties to be returned"
            },
            "expand": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Expand related entities"
            },
            "messageId": {
              "type": "string",
              "description": "Path parameter: messageId"
            },
            "attachmentId": {
              "type": "string",
              "description": "Path parameter: attachmentId"
            },
            "fetchAllPages": {
              "type": "boolean",
              "description": "Automatically fetch all pages of results"
            }
          },
          "required": [
            "messageId",
            "attachmentId"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "delete-mail-attachment",
        "description": "Delete navigation property attachments for me",
        "parameters": {
          "type": "object",
          "properties": {
            "If-Match": {
              "type": "string",
              "description": "ETag"
            },
            "messageId": {
              "type": "string",
              "description": "Path parameter: messageId"
            },
            "attachmentId": {
              "type": "string",
              "description": "Path parameter: attachmentId"
            }
          },
          "required": [
            "messageId",
            "attachmentId"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "move-mail-message",
        "description": "Move a message to another folder within the specified user&#x27;s mailbox. This creates a new copy of the message in the destination folder and removes the original message.",
        "parameters": {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "DestinationId": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "messageId": {
              "type": "string",
              "description": "Path parameter: messageId"
            }
          },
          "required": [
            "body",
            "messageId"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "send-mail",
        "description": "Send the message specified in the request body using either JSON or MIME format. When using JSON format, you can include a file attachment in the same sendMail action call. When using MIME format: This method saves the message in the Sent Items folder. Alternatively, create a draft message to send later. To learn more about the steps involved in the backend before a mail is delivered to recipients, see here.",
        "parameters": {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "Message": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "The content of the item."
                        },
                        "contentType": {
                          "type": "string",
                          "enum": [
                            "text",
                            "html"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "subject": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The subject of the message."
                    },
                    "attachments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier for an entity. Read-only."
                          },
                          "contentType": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The MIME type."
                          },
                          "isInline": {
                            "type": "boolean",
                            "description": "true if the attachment is an inline attachment; otherwise, false."
                          },
                          "lastModifiedDateTime": {
                            "anyOf": [
                              {
                                "type": "string",
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "format": "date-time",
                                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The attachment's file name."
                          },
                          "size": {
                            "type": "number",
                            "minimum": -2147483648,
                            "maximum": 2147483647,
                            "description": "The length of the attachment in bytes."
                          }
                        },
                        "additionalProperties": false
                      },
                      "description": "The fileAttachment and itemAttachment attachments for the message."
                    },
                    "bccRecipients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "emailAddress": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The email address of the person or entity."
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The display name of the person or entity."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "description": "The Bcc: recipients for the message."
                    },
                    "bodyPreview": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The first 255 characters of the message body. It is in text format."
                    },
                    "ccRecipients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "emailAddress": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The email address of the person or entity."
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The display name of the person or entity."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "description": "The Cc: recipients for the message."
                    },
                    "conversationId": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The ID of the conversation the email belongs to."
                    },
                    "conversationIndex": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Indicates the position of the message within the conversation."
                    },
                    "flag": {
                      "type": "object",
                      "properties": {
                        "completedDateTime": {
                          "type": "object",
                          "properties": {
                            "dateTime": {
                              "type": "string",
                              "description": "A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000)."
                            },
                            "timeZone": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values."
                            }
                          },
                          "additionalProperties": false
                        },
                        "dueDateTime": {
                          "type": "object",
                          "properties": {
                            "dateTime": {
                              "type": "string",
                              "description": "A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000)."
                            },
                            "timeZone": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values."
                            }
                          },
                          "additionalProperties": false
                        },
                        "flagStatus": {
                          "type": "string",
                          "enum": [
                            "notFlagged",
                            "complete",
                            "flagged"
                          ]
                        },
                        "startDateTime": {}
                      },
                      "additionalProperties": false
                    },
                    "from": {},
                    "hasAttachments": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Indicates whether the message has attachments. This property doesn't include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src='cid:image001.jpg@01D26CD8.6C05F070'>."
                    },
                    "importance": {
                      "type": "string",
                      "enum": [
                        "low",
                        "normal",
                        "high"
                      ]
                    },
                    "inferenceClassification": {
                      "type": "string",
                      "enum": [
                        "focused",
                        "other"
                      ]
                    },
                    "internetMessageHeaders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "Represents the key in a key-value pair."
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The value in a key-value pair."
                          }
                        },
                        "additionalProperties": false
                      },
                      "description": "A collection of message headers defined by RFC5322. The set includes message headers indicating the network path taken by a message from the sender to the recipient. It can also contain custom message headers that hold app data for the message.  Returned only on applying a $select query option. Read-only."
                    },
                    "internetMessageId": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The message ID in the format specified by RFC2822."
                    },
                    "isDeliveryReceiptRequested": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Indicates whether a read receipt is requested for the message."
                    },
                    "isDraft": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Indicates whether the message is a draft. A message is a draft if it hasn't been sent yet."
                    },
                    "isRead": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Indicates whether the message has been read."
                    },
                    "isReadReceiptRequested": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Indicates whether a read receipt is requested for the message."
                    },
                    "parentFolderId": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The unique identifier for the message's parent mailFolder."
                    },
                    "receivedDateTime": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                          "format": "date-time",
                          "description": "The date and time the message was received.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "description": "The date and time the message was received.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                    },
                    "replyTo": {
                      "type": "array",
                      "items": {},
                      "description": "The email addresses to use when replying."
                    },
                    "sender": {},
                    "sentDateTime": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                          "format": "date-time",
                          "description": "The date and time the message was sent.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "description": "The date and time the message was sent.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                    },
                    "toRecipients": {
                      "type": "array",
                      "items": {},
                      "description": "The To: recipients for the message."
                    }
                  },
                  "additionalProperties": true,
                  "description": "[Note: Simplified from 30 properties to 25 most common ones]"
                },
                "SaveToSentItems": {
                  "type": [
                    "boolean",
                    "null"
                  ],
                  "default": false
                }
              },
              "additionalProperties": false
            }
          },
          "required": [
            "body"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "list-shared-mailbox-folder-messages",
        "description": "The collection of messages in the mailFolder.",
        "parameters": {
          "type": "object",
          "properties": {
            "top": {
              "type": "integer",
              "minimum": 0,
              "description": "Show only the first n items"
            },
            "skip": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip the first n items"
            },
            "search": {
              "type": "string",
              "description": "Search items by search phrases"
            },
            "filter": {
              "type": "string",
              "description": "Filter items by property values"
            },
            "count": {
              "type": "boolean",
              "description": "Include count of items"
            },
            "orderby": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Order items by property values"
            },
            "select": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Select properties to be returned"
            },
            "expand": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Expand related entities"
            },
            "userId": {
              "type": "string",
              "description": "Path parameter: userId"
            },
            "mailFolderId": {
              "type": "string",
              "description": "Path parameter: mailFolderId"
            },
            "fetchAllPages": {
              "type": "boolean",
              "description": "Automatically fetch all pages of results"
            }
          },
          "required": [
            "userId",
            "mailFolderId"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "list-shared-mailbox-messages",
        "description": "The messages in a mailbox or folder. Read-only. Nullable.",
        "parameters": {
          "type": "object",
          "properties": {
            "includeHiddenMessages": {
              "type": "string",
              "description": "Include Hidden Messages"
            },
            "top": {
              "type": "integer",
              "minimum": 0,
              "description": "Show only the first n items"
            },
            "skip": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip the first n items"
            },
            "search": {
              "type": "string",
              "description": "Search items by search phrases"
            },
            "filter": {
              "type": "string",
              "description": "Filter items by property values"
            },
            "count": {
              "type": "boolean",
              "description": "Include count of items"
            },
            "orderby": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Order items by property values"
            },
            "select": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Select properties to be returned"
            },
            "expand": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Expand related entities"
            },
            "userId": {
              "type": "string",
              "description": "Path parameter: userId"
            },
            "fetchAllPages": {
              "type": "boolean",
              "description": "Automatically fetch all pages of results"
            }
          },
          "required": [
            "userId"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "get-shared-mailbox-message",
        "description": "The messages in a mailbox or folder. Read-only. Nullable.",
        "parameters": {
          "type": "object",
          "properties": {
            "includeHiddenMessages": {
              "type": "string",
              "description": "Include Hidden Messages"
            },
            "select": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Select properties to be returned"
            },
            "expand": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Expand related entities"
            },
            "userId": {
              "type": "string",
              "description": "Path parameter: userId"
            },
            "messageId": {
              "type": "string",
              "description": "Path parameter: messageId"
            },
            "fetchAllPages": {
              "type": "boolean",
              "description": "Automatically fetch all pages of results"
            }
          },
          "required": [
            "userId",
            "messageId"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    },
    {
      "type": "function",
      "function": {
        "name": "send-shared-mailbox-mail",
        "description": "Send the message specified in the request body using either JSON or MIME format. When using JSON format, you can include a file attachment in the same sendMail action call. When using MIME format: This method saves the message in the Sent Items folder. Alternatively, create a draft message to send later. To learn more about the steps involved in the backend before a mail is delivered to recipients, see here.",
        "parameters": {
          "type": "object",
          "properties": {
            "body": {
              "type": "object",
              "properties": {
                "Message": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "The content of the item."
                        },
                        "contentType": {
                          "type": "string",
                          "enum": [
                            "text",
                            "html"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "subject": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The subject of the message."
                    },
                    "attachments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier for an entity. Read-only."
                          },
                          "contentType": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The MIME type."
                          },
                          "isInline": {
                            "type": "boolean",
                            "description": "true if the attachment is an inline attachment; otherwise, false."
                          },
                          "lastModifiedDateTime": {
                            "anyOf": [
                              {
                                "type": "string",
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "format": "date-time",
                                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The attachment's file name."
                          },
                          "size": {
                            "type": "number",
                            "minimum": -2147483648,
                            "maximum": 2147483647,
                            "description": "The length of the attachment in bytes."
                          }
                        },
                        "additionalProperties": false
                      },
                      "description": "The fileAttachment and itemAttachment attachments for the message."
                    },
                    "bccRecipients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "emailAddress": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The email address of the person or entity."
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The display name of the person or entity."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "description": "The Bcc: recipients for the message."
                    },
                    "bodyPreview": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The first 255 characters of the message body. It is in text format."
                    },
                    "ccRecipients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "emailAddress": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The email address of the person or entity."
                              },
                              "name": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "The display name of the person or entity."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "description": "The Cc: recipients for the message."
                    },
                    "conversationId": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The ID of the conversation the email belongs to."
                    },
                    "conversationIndex": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Indicates the position of the message within the conversation."
                    },
                    "flag": {
                      "type": "object",
                      "properties": {
                        "completedDateTime": {
                          "type": "object",
                          "properties": {
                            "dateTime": {
                              "type": "string",
                              "description": "A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000)."
                            },
                            "timeZone": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values."
                            }
                          },
                          "additionalProperties": false
                        },
                        "dueDateTime": {
                          "type": "object",
                          "properties": {
                            "dateTime": {
                              "type": "string",
                              "description": "A single point of time in a combined date and time representation ({date}T{time}; for example, 2017-08-29T04:00:00.0000000)."
                            },
                            "timeZone": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Represents a time zone, for example, 'Pacific Standard Time'. See below for more possible values."
                            }
                          },
                          "additionalProperties": false
                        },
                        "flagStatus": {
                          "type": "string",
                          "enum": [
                            "notFlagged",
                            "complete",
                            "flagged"
                          ]
                        },
                        "startDateTime": {}
                      },
                      "additionalProperties": false
                    },
                    "from": {},
                    "hasAttachments": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Indicates whether the message has attachments. This property doesn't include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src='cid:image001.jpg@01D26CD8.6C05F070'>."
                    },
                    "importance": {
                      "type": "string",
                      "enum": [
                        "low",
                        "normal",
                        "high"
                      ]
                    },
                    "inferenceClassification": {
                      "type": "string",
                      "enum": [
                        "focused",
                        "other"
                      ]
                    },
                    "internetMessageHeaders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "Represents the key in a key-value pair."
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "The value in a key-value pair."
                          }
                        },
                        "additionalProperties": false
                      },
                      "description": "A collection of message headers defined by RFC5322. The set includes message headers indicating the network path taken by a message from the sender to the recipient. It can also contain custom message headers that hold app data for the message.  Returned only on applying a $select query option. Read-only."
                    },
                    "internetMessageId": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The message ID in the format specified by RFC2822."
                    },
                    "isDeliveryReceiptRequested": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Indicates whether a read receipt is requested for the message."
                    },
                    "isDraft": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Indicates whether the message is a draft. A message is a draft if it hasn't been sent yet."
                    },
                    "isRead": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Indicates whether the message has been read."
                    },
                    "isReadReceiptRequested": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Indicates whether a read receipt is requested for the message."
                    },
                    "parentFolderId": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The unique identifier for the message's parent mailFolder."
                    },
                    "receivedDateTime": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                          "format": "date-time",
                          "description": "The date and time the message was received.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "description": "The date and time the message was received.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                    },
                    "replyTo": {
                      "type": "array",
                      "items": {},
                      "description": "The email addresses to use when replying."
                    },
                    "sender": {},
                    "sentDateTime": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                          "format": "date-time",
                          "description": "The date and time the message was sent.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "description": "The date and time the message was sent.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
                    },
                    "toRecipients": {
                      "type": "array",
                      "items": {},
                      "description": "The To: recipients for the message."
                    }
                  },
                  "additionalProperties": true,
                  "description": "[Note: Simplified from 30 properties to 25 most common ones]"
                },
                "SaveToSentItems": {
                  "type": [
                    "boolean",
                    "null"
                  ],
                  "default": false
                }
              },
              "additionalProperties": false
            },
            "userId": {
              "type": "string",
              "description": "Path parameter: userId"
            }
          },
          "required": [
            "body",
            "userId"
          ],
          "additionalProperties": false,
          "$schema": "http://json-schema.org/draft-07/schema#"
        }
      }
    }
  ],
  "tool_choice": "auto",
  "model": "Qwen/Qwen3-Coder-480B-A35B-Instruct:fireworks-ai",
  "max_tokens": 655,
  "stream": true
}
